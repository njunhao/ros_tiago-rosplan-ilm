<?xml version="1.0"?>
<launch>

	<!-- arguments -->
	<arg name="domain_path"	      default="$(find rosplan_demos)/common/domain_turtlebot_demo.pddl" />
	<arg name="problem_path"	  default="" />
	<arg name="planning_language" default="PDDL" /> <!-- Can be RDDL, PPDDL or PDDL -->
	<arg name="planner_command"   default="timeout 10 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
	<arg name="planner_interface" default="popf_planner_interface" />
	<!-- <arg name="parsing_type"	  default="pddl_esterel_plan_parser" /> -->
	<arg name="planner_topic"     default="planner_output" />
	<arg name="use_planner"       default="true" />

	<!-- scene database (MongoDB) -->
	<include file="$(find mongodb_store)/launch/mongodb_store.launch">
		<arg name="db_path" value="$(find rosplan_knowledge_base)/common/mongoDB/"/>
	</include>

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="true" output="screen">   <!-- set respawn to true so that we can kill this node and let it re-initialize with new domain and problem PDDL -->
		<param name="domain_path" value="$(arg domain_path)" />
		<param name="problem_path" value="$(arg problem_path)" />
		<param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB/" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>

	<!-- problem generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="knowledge_base"    value="rosplan_knowledge_base" />
		<arg name="domain_path"       value="$(arg domain_path)" />
		<arg name="problem_path"      value="$(find rosplan_ilm)/common/problem.pddl" />
		<arg name="problem_topic"     value="problem_instance" />
		<arg name="planning_language" value="$(arg planning_language)" />
	</include>

	<!-- planner interface -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch" if="$(arg use_planner)">
		<arg name="use_problem_topic"    value="true" />
		<arg name="problem_topic"        value="/rosplan_problem_interface/problem_instance" />
		<arg name="planner_topic"        value="$(arg planner_topic)" />
		<arg name="domain_path"          value="$(arg domain_path)" />
		<arg name="problem_path"         value="$(find rosplan_ilm)/common/problem.pddl" />
		<arg name="data_path"            value="$(find rosplan_ilm)/common/" />
		<arg name="planner_command"      value="$(arg planner_command)" />
		<arg name="planner_interface"    value="$(arg planner_interface)" />
	</include>

	<!-- plan parsing -->
	<include file="$(find rosplan_ilm)/launch/includes/parsing_interface.launch">
		<arg name="knowledge_base"   value="rosplan_knowledge_base" />
		<arg name="planner_topic"    value="/rosplan_planner_interface/$(arg planner_topic)" />
		<arg name="plan_topic"       value="complete_plan" />
		<!-- <arg name="parsing_type"	 value="$(arg parsing_type)" /> -->
	</include>

	<!-- plan dispatch -->
	<include file="$(find rosplan_ilm)/launch/includes/dispatch_interface.launch">
		<arg name="knowledge_base"           value="rosplan_knowledge_base" />
		<arg name="plan_topic"               value="/rosplan_parsing_interface/complete_plan" />
		<arg name="action_dispatch_topic"    value="action_dispatch" />
		<arg name="action_feedback_topic"    value="action_feedback" />
		<!-- <arg name="parsing_type"			 value="$(arg parsing_type)" /> -->
	</include>

</launch>
